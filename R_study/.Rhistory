pheatmap::pheatmap(b[sample(1:nrow(b),50),])
# sample(1:nrow(b),50)
# pheatmap::pheatmap(b[sample(1:nrow(b),50),])
pheatmap::pheatmap(b[cg,])
cg = names(sort(apply(b,1,sd),decreasing = T)[1:10])
# sample(1:nrow(b),50)
# pheatmap::pheatmap(b[sample(1:nrow(b),50),])
pheatmap::pheatmap(b[cg,])
# sample(1:nrow(b),50)
# pheatmap::pheatmap(b[sample(1:nrow(b),50),])
pheatmap::pheatmap(b[cg,1:10])
rm(list = ls())
a1 = rnorm(100)
rm(list = ls())
a1 = rnorm(100)
dim(a1) = c(5,20)
a2 = rnorm(100)+2
dim(a2) = c(5,20)
library(pheatmap)
pheatmap(a1,cluster_rows = F,cluster_rows = F)
pheatmap(a1)
pheatmap(a2)
pheatmap(cbind(a1,a2))
pheatmap(a2)
# 合并
pheatmap(cbind(a1,a2))
pheatmap(a1)
# 合并
pheatmap(cbind(a1,a2))
# 合并
pheatmap(cbind(a1,a2),cluster_cols = F)
a1 = rnorm(100)
pheatmap(a1)
a2 = rnorm(100)+2
# 合并
pheatmap(cbind(a1,a2),cluster_cols = F)
# 合并
pheatmap(cbind(a1,a2))
# 合并
pheatmap(cbind(a1,a2))
pheatmap(cbind(a1,a2),cluster_cols = F)
b = cbind(a1,a2)
dim(a1) = c(5,20)
dim(a2) = c(5,20)
b = cbind(a1,a2)
b = as.data.frame(b)
names(b)
names(b) = c(paste('a1',1:20,sep = '_'),paste('a2',1:20,sep = '_'))
View(b)
pheatmap(b)
rm(list = ls())
pheatmap(b,cluster_cols = F)
pheatmap(b , cluster_cols = F)
b = cbind(a1,a2) # 先横向进行合并
rm(list = ls())
library(pheatmap)
a1 = rnorm(100)
pheatmap(a1)
a1 = rnorm(100)
pheatmap(a1)
a1 = rnorm(100)
pheatmap(a1)
a2 = rnorm(100)+2
# 合并
pheatmap(cbind(a1,a2))
pheatmap(cbind(a1,a2),cluster_cols = F)
# 合并
pheatmap(cbind(a1,a2))
dim(a1) = c(5,20)
dim(a2) = c(5,20)
b = cbind(a1,a2) # 先横向进行合并
b = as.data.frame(b) # 使其拥有列名，可以理解为变量名
View(b)
pheatmap(b , cluster_cols = F)
pheatmap(b , cluster_cols = F)
names(b) = c(paste('a1',1:20,sep = '_'),paste('a2',1:20,sep = '_'))
pheatmap(b , cluster_cols = F)
pheatmap(cbind(a1,a2),show_rownames = F,show_rownames = F)
# read file
a = read.table('ensemble.txt')
rm(list = ls())
options(stringsAsFactors = F)
# read file
a = read.table('ensemble.txt')
# read file
a = read.table('ensembl.txt')
View(a)
strsplit(a$V1,'[.]',simplify = T)
strsplit(a$V1,'[.]')
strsplit(a$V1,'[.]')[[1]][1]
# library stringr
libarary(stringr)
install.packages("stringr")
install.packages("stringr")
install.packages("nloptr")
rm(list = ls())
rm(list = ls())
options(stringsAsFactors = F)
# read file
a = read.table('ensembl.txt')
# the way of select
strsplit(a$V1,'[.]')
strsplit(a$V1,'[.]')[[1]][1]
# library stringr
libarary(stringr)
# library stringr
libarary('stringr')
# library stringr
library('stringr')
str_split(a$V1,'[.]',simplify = T)
a$ensembl_id = strsplit(a$V1,'[.]',simplify = T)
a$ensembl_id = str_split(a$V1,'[.]',simplify = T)
class(str_split(a$V1,'[.]',simplify = T))
a$ensembl_id = str_split(a$V1,'[.]',simplify = T)
a$ensembl_id = str_split(a$V1,'[.]',simplify = T)[,1]
View(a)
# org.Hs.eg.db 里有注释关系
g2s = toTable(org.Hs.egSYMBOL)
# org.Hs.eg.db 里有注释关系
library(org.Hs.eg.db)
library(org.Hs.eg.db)
g2s = toTable(org.Hs.egSYMBOL)
g2e = toTable(org.Hs.egENSEMBL)
View(g2e)
View(g2s)
View(g2e)
View(g2e)
View(g2s)
View(a)
b = merge(a,g2e,by='ensemble_id',all.x=T)
b = merge(a,g2e,by='ensembl_id',all.x=T)
View(b)
d = merge(b,g2s,by="gene_id",all.x = T)
View(d)
d = d[order(d$V1)]
order(d$V1)
d = d[order(d$V1),]
# Discard duplicate variables
table(table(d$ensemble_id)>1)
# Discard duplicate variables
table(table(d$ensembl_id)>1)
table(d$ensembl_id)[table(d$ensembl_id)>1]
d = d[!duplicated()]
d = d[!duplicated(d$V1),]
View(a)
d = d[match(a$V1,d$V1),] # 找到另外元素在这边的顺序
write.csv(d,"geneID2symbol.csv")
View(d)
View(d)
rownames(d) = d$ensembl_id
d = [,-2]
d = d[,-2]
write.csv(d,"geneID2symbol.csv")
# read file
a = read.table('BLCA_93663_50_50.csv')
rm(list = ls())
options(stringsAsFactors = F)
# read file
a = read.table('BLCA_93663_50_50.csv')
View(a)
# read file
a = read.table('BLCA_93663_50_50.csv',sep=',',header=T,
fill=T)
install.packages("ggstatsplot")
rm(list = ls())
options(stringsAsFactors = F)
# read file
a = read.table('BLCA_93663_50_50.csv',sep=',',header=T,
fill=T)
library(ggstatsplot)
ggbetweenstats(data = dat, x = Group, y= Expression)
dat = a
ggbetweenstats(data = dat, x = Group, y= Expression)
View(dat)
View(dat)
rm(list = ls())
options(stringsAsFactors = F)
# read file
a = read.table('BLCA_93663_50_50.csv',sep=',',header=T,
fill=T)
dat = a
library(ggstatsplot)
ggbetweenstats(data = dat,
x = Group, y= Expression)
ggbetweenstats(data = dat,
x = “Group”, y= Expression)
ggbetweenstats(data = dat,
x = "Group", y= Expression)
library(ggplot2)
library(survival)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
library(ggplot2)
library(survival)
library(survminer)
install.packages(survminer)
install.packages("survminer")
install.packages(c("callr", "effectsize", "lme4", "nloptr", "R.utils"))
install.packages("survminer")
install.packages("nloptr")
ing
sessionInfo()
library(nloptr)
remove.packages("nloptr", lib="~/R/x86_64-pc-linux-gnu-library/4.2")
install.packages("nloptr")
install.packages("nloptr")
install.packages("nloptr")
packageurl<-"https://cran.r-project.org/src/contrib/Archive/nloptr/nloptr_1.2.1.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages("survminer")
install.packages("survminer")
.libPaths(myPaths)
.libPaths()
packageurl<-"https://cran.r-project.org/src/contrib/Archive/jpeg/jpeg_0.1-6.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
packageurl<-"https://cran.r-project.org/src/contrib/Archive/jpeg/jpeg_0.1-2.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
packageurl<-"https://cran.r-project.org/src/contrib/Archive/jpeg/jpeg_0.1-1.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages("survminer")
library(ggplot2)
library(survival)
library(survminer)
install.packages("ggtext")
install.packages("survminer")
install.packages("survminer")
g++
去）
install.packages("survminer")
install.packages("gridtext")
install.packages("gridtext")
install.packages("survminer")
library(ggplot2)
library(survival)
library(survminer)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
library(ggplot2)
library(survival)
library(survminer)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
ggsurplot(sfit,palette=c("#E78800","#2E9FDF"),
risk.table=TRUE,Pval=TRUE,
conf.int=TRUE,xlab="Time in months",
ggthem=them_light(),
ncensor.plot=TRUE)
library(ggplot2)
library(survival)
library(survminer)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
ggsurvplot(sfit,palette=c("#E78800","#2E9FDF"),
risk.table=TRUE,Pval=TRUE,
conf.int=TRUE,xlab="Time in months",
ggthem=them_light(),
ncensor.plot=TRUE)
library(ggplot2)
library(survival)
library(survminer)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
ggsurvplot(sfit,palette=c("#E78800","#2E9FDF"),
risk.table=TRUE,Pval=TRUE,
conf.int=TRUE,xlab="Time in months",
ggtheme=theme_light(),
ncensor.plot=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
dat = a
library(ggstatsplot)
ggbetweenstats(data = dat,
x = "Group", y= "Expression")
library(ggplot2)
library(survival)
library(survminer)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
ggsurvplot(sfit,palette=c("#E78800","#2E9FDF"),
risk.table=TRUE,Pval=TRUE,
conf.int=TRUE,xlab="Time in months",
ggtheme=theme_light(),
ncensor.plot=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
View(dat)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
rm(list=ls())
options(stringsAsFactors = F)
# Ovarian Serous Cystadenocarcinoma(TCGA, Nature 2011)
# All complete tumors (316 samples)/1 Genes
# Gene set/ pathway is altered in 28 of queied samples
a = read.table('plot.txt',header = T,
sep = "\t")
View(a)
a = read.table('plot.txt',header = T,
sep = "\t",fill=T)
a = read.table('plot.txt',header = T,
sep = "\t",fill = T)
colnames(a) = c('id','stage','gene','mut','alteration')
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
dat=a
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
.libPaths()
install.packages("ggstatsplot")
install.packages("ggstatsplot")
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
y
install.packages("nloptr")
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
install.packages("gmp")
rm(list = ls())
options(stringsAsFactors = F)
# read file
a = read.table('BLCA_93663_50_50.csv',sep=',',header=T,
fill=T)
dat = a
library(ggstatsplot)
ggbetweenstats(data = dat,
x = "Group", y= "Expression")
rm(list=ls())
options(stringsAsFactors = F)
# Ovarian Serous Cystadenocarcinoma(TCGA, Nature 2011)
# All complete tumors (316 samples)/1 Genes
# Gene set/ pathway is altered in 28 of queied samples
a = read.table('plot.txt',header = T,
sep = "\t",fill = T)
colnames(a) = c('id','stage','gene','mut','alteration')
dat=a
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
install.packages("gmp")
rm(list=ls())
options(stringsAsFactors = F)
# Ovarian Serous Cystadenocarcinoma(TCGA, Nature 2011)
# All complete tumors (316 samples)/1 Genes
# Gene set/ pathway is altered in 28 of queied samples
a = read.table('plot.txt',header = T,
sep = "\t",fill = T)
colnames(a) = c('id','stage','gene','mut','alteration')
dat=a
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
install.packages("PMCMRplus")
rm(list=ls())
options(stringsAsFactors = F)
# Ovarian Serous Cystadenocarcinoma(TCGA, Nature 2011)
# All complete tumors (316 samples)/1 Genes
# Gene set/ pathway is altered in 28 of queied samples
a = read.table('plot.txt',header = T,
sep = "\t",fill = T)
colnames(a) = c('id','stage','gene','mut','alteration')
dat=a
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
# change method
# compute the analysis of variance
res.aov <-aov(gene~stage,data=dat)
summary(res.aov)
TukeyHSD(res.aov)
rm(list=ls())
options(stringsAsFactors = F)
# bioconductor 的数据包
libarary(airway)
rm(list=ls())
options(stringsAsFactors = F)
# bioconductor 的数据包
library(airway)
install.packages("airway")
# https://bioconductor.org/packages/release/bioc/html/GEOquery.html
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("airway")
e
# bioconductor 的数据包
library(airway)
data(airway)
View(airway)
airway
exprSet= assay(airway)
View(exprSet)
View(airway)
colunames(exprSet)
colnames(exprSet)
# [1] "SRR1039508" "SRR1039509" "SRR1039512" "SRR1039513" "SRR1039516"
# [6] "SRR1039517" "SRR1039520" "SRR1039521"
group_list = colData(airway)[,3]
install.packages("edgeR")
BiocManager::install("edgeR")
group_list = colData(airway)[,3]
tmp = data.frame(g=gr)
tmp = data.frame(g=group_list)
View(tmp)
group_list = colData(airway)[,3]
tmp = data.frame(g=group_list)
rownames(tmp) = colnames(exprSet)
pheatmap::pheatmap(cor(exprSet))
pheatmap::pheatmap(cor(exprSet),annotation_col = tmp)
# 删除基因表达量合小于5
exprSet = exprSet[apply(exprSet,1,function(x) sum(x>1)>5),]
View(exprSet)
dim(exprSet)
exprSet = exprSet[names(sort(apply(exprSet,1,mad),decreasing = T)[1:50])]
rm(list=ls())
options(stringsAsFactors = F)
# bioconductor 的数据包
library(airway)
data(airway)
exprSet= assay(airway)
colnames(exprSet)
# [1] "SRR1039508" "SRR1039509" "SRR1039512" "SRR1039513" "SRR1039516"
# [6] "SRR1039517" "SRR1039520" "SRR1039521"
# 注释信息
group_list = colData(airway)[,3]
tmp = data.frame(g=group_list)
rownames(tmp) = colnames(exprSet)
pheatmap::pheatmap(cor(exprSet),annotation_col = tmp)
# 删除基因表达量合小于5
exprSet = exprSet[apply(exprSet,1,function(x) sum(x>1)>5),]
dim(exprSet) # 只剩两万个了
exprSet = log(edgeR::cpm(exprSet)+1)
exprSet = exprSet[names(sort(apply(exprSet,1,mad),decreasing = T)[1:50])]
M = cor(log2(exprSet+1))
rm(list=ls())
options(stringsAsFactors = F)
# bioconductor 的数据包
library(airway)
data(airway)
exprSet= assay(airway)
colnames(exprSet)
# [1] "SRR1039508" "SRR1039509" "SRR1039512" "SRR1039513" "SRR1039516"
# [6] "SRR1039517" "SRR1039520" "SRR1039521"
# 注释信息
group_list = colData(airway)[,3]
tmp = data.frame(g=group_list)
rownames(tmp) = colnames(exprSet)
pheatmap::pheatmap(cor(exprSet),annotation_col = tmp)
# 删除基因表达量合小于5
exprSet = exprSet[apply(exprSet,1,function(x) sum(x>1)>5),]
dim(exprSet) # 只剩两万个了
exprSet = log(edgeR::cpm(exprSet)+1)
exprSet = exprSet[names(sort(apply(exprSet,1,mad),decreasing = T)[1:50]),]
View(exprSet)
M = cor(log2(exprSet+1))
View(tmp)
M = cor(log2(exprSet+1))
tmp = data.frame(g=group_list)
rownames(tmp) = colnames(M)
pheatmap::pheatmap(M,annotation_col=tmp,filename = 'cor.png')
View(exprSet)
rm(list = ls())  ## 魔幻操作，一键清空~
options(stringsAsFactors = F)
# 注意查看下载文件的大小，检查数据
f='GSE42872_eSet.Rdata'
library(GEOquery)
BiocManager::install("GEOquery")
rm(list = ls())  ## 魔幻操作，一键清空~
options(stringsAsFactors = F)
# 注意查看下载文件的大小，检查数据
f='GSE42872_eSet.Rdata'
library(GEOquery)
# 这个包需要注意两个配置，一般来说自动化的配置是足够的。
#Setting options('download.file.method.GEOquery'='auto')
#Setting options('GEOquery.inmemory.gpl'=FALSE)
if(!file.exists(f)){
gset <- getGEO('GSE42872', destdir=".",
AnnotGPL = F,     ## 注释文件
getGPL = F)       ## 平台文件
save(gset,file=f)   ## 保存到本地
if(!file.exists(f)){
gset <- getGEO('GSE42872', destdir=".",
AnnotGPL = F,     ## 注释文件
getGPL = F)       ## 平台文件
save(gset,file=f)   ## 保存到本地
}
q()
q
