View(d)
d = d[order(d$V1)]
order(d$V1)
d = d[order(d$V1),]
# Discard duplicate variables
table(table(d$ensemble_id)>1)
# Discard duplicate variables
table(table(d$ensembl_id)>1)
table(d$ensembl_id)[table(d$ensembl_id)>1]
d = d[!duplicated()]
d = d[!duplicated(d$V1),]
View(a)
d = d[match(a$V1,d$V1),] # 找到另外元素在这边的顺序
write.csv(d,"geneID2symbol.csv")
View(d)
View(d)
rownames(d) = d$ensembl_id
d = [,-2]
d = d[,-2]
write.csv(d,"geneID2symbol.csv")
# read file
a = read.table('BLCA_93663_50_50.csv')
rm(list = ls())
options(stringsAsFactors = F)
# read file
a = read.table('BLCA_93663_50_50.csv')
View(a)
# read file
a = read.table('BLCA_93663_50_50.csv',sep=',',header=T,
fill=T)
install.packages("ggstatsplot")
rm(list = ls())
options(stringsAsFactors = F)
# read file
a = read.table('BLCA_93663_50_50.csv',sep=',',header=T,
fill=T)
library(ggstatsplot)
ggbetweenstats(data = dat, x = Group, y= Expression)
dat = a
ggbetweenstats(data = dat, x = Group, y= Expression)
View(dat)
View(dat)
rm(list = ls())
options(stringsAsFactors = F)
# read file
a = read.table('BLCA_93663_50_50.csv',sep=',',header=T,
fill=T)
dat = a
library(ggstatsplot)
ggbetweenstats(data = dat,
x = Group, y= Expression)
ggbetweenstats(data = dat,
x = “Group”, y= Expression)
ggbetweenstats(data = dat,
x = "Group", y= Expression)
library(ggplot2)
library(survival)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
library(ggplot2)
library(survival)
library(survminer)
install.packages(survminer)
install.packages("survminer")
install.packages(c("callr", "effectsize", "lme4", "nloptr", "R.utils"))
install.packages("survminer")
install.packages("nloptr")
ing
sessionInfo()
library(nloptr)
remove.packages("nloptr", lib="~/R/x86_64-pc-linux-gnu-library/4.2")
install.packages("nloptr")
install.packages("nloptr")
install.packages("nloptr")
packageurl<-"https://cran.r-project.org/src/contrib/Archive/nloptr/nloptr_1.2.1.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages("survminer")
install.packages("survminer")
.libPaths(myPaths)
.libPaths()
packageurl<-"https://cran.r-project.org/src/contrib/Archive/jpeg/jpeg_0.1-6.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
packageurl<-"https://cran.r-project.org/src/contrib/Archive/jpeg/jpeg_0.1-2.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
packageurl<-"https://cran.r-project.org/src/contrib/Archive/jpeg/jpeg_0.1-1.tar.gz"
install.packages(packageurl, repos=NULL, type="source")
install.packages("survminer")
library(ggplot2)
library(survival)
library(survminer)
install.packages("ggtext")
install.packages("survminer")
install.packages("survminer")
g++
去）
install.packages("survminer")
install.packages("gridtext")
install.packages("gridtext")
install.packages("survminer")
library(ggplot2)
library(survival)
library(survminer)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
library(ggplot2)
library(survival)
library(survminer)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
ggsurplot(sfit,palette=c("#E78800","#2E9FDF"),
risk.table=TRUE,Pval=TRUE,
conf.int=TRUE,xlab="Time in months",
ggthem=them_light(),
ncensor.plot=TRUE)
library(ggplot2)
library(survival)
library(survminer)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
ggsurvplot(sfit,palette=c("#E78800","#2E9FDF"),
risk.table=TRUE,Pval=TRUE,
conf.int=TRUE,xlab="Time in months",
ggthem=them_light(),
ncensor.plot=TRUE)
library(ggplot2)
library(survival)
library(survminer)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
ggsurvplot(sfit,palette=c("#E78800","#2E9FDF"),
risk.table=TRUE,Pval=TRUE,
conf.int=TRUE,xlab="Time in months",
ggtheme=theme_light(),
ncensor.plot=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
dat = a
library(ggstatsplot)
ggbetweenstats(data = dat,
x = "Group", y= "Expression")
library(ggplot2)
library(survival)
library(survminer)
table(dat$Status)
dat$Status = ifelse(dat$Status == "Dead",1,0)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
ggsurvplot(sfit,palette=c("#E78800","#2E9FDF"),
risk.table=TRUE,Pval=TRUE,
conf.int=TRUE,xlab="Time in months",
ggtheme=theme_light(),
ncensor.plot=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
View(dat)
sfit <- survfit(Surv(Days,Status)~Group, data=dat)
sfit
summary(sfit)
ggsurvplot(sfit, conf.int=F, pval=TRUE)
ggsave("survival_ARHGAP1_in_LGG.png")
rm(list=ls())
options(stringsAsFactors = F)
# Ovarian Serous Cystadenocarcinoma(TCGA, Nature 2011)
# All complete tumors (316 samples)/1 Genes
# Gene set/ pathway is altered in 28 of queied samples
a = read.table('plot.txt',header = T,
sep = "\t")
View(a)
a = read.table('plot.txt',header = T,
sep = "\t",fill=T)
a = read.table('plot.txt',header = T,
sep = "\t",fill = T)
colnames(a) = c('id','stage','gene','mut','alteration')
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
dat=a
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
.libPaths()
install.packages("ggstatsplot")
install.packages("ggstatsplot")
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
y
install.packages("nloptr")
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
install.packages("gmp")
rm(list = ls())
options(stringsAsFactors = F)
# read file
a = read.table('BLCA_93663_50_50.csv',sep=',',header=T,
fill=T)
dat = a
library(ggstatsplot)
ggbetweenstats(data = dat,
x = "Group", y= "Expression")
rm(list=ls())
options(stringsAsFactors = F)
# Ovarian Serous Cystadenocarcinoma(TCGA, Nature 2011)
# All complete tumors (316 samples)/1 Genes
# Gene set/ pathway is altered in 28 of queied samples
a = read.table('plot.txt',header = T,
sep = "\t",fill = T)
colnames(a) = c('id','stage','gene','mut','alteration')
dat=a
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
install.packages("gmp")
rm(list=ls())
options(stringsAsFactors = F)
# Ovarian Serous Cystadenocarcinoma(TCGA, Nature 2011)
# All complete tumors (316 samples)/1 Genes
# Gene set/ pathway is altered in 28 of queied samples
a = read.table('plot.txt',header = T,
sep = "\t",fill = T)
colnames(a) = c('id','stage','gene','mut','alteration')
dat=a
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
install.packages("PMCMRplus")
rm(list=ls())
options(stringsAsFactors = F)
# Ovarian Serous Cystadenocarcinoma(TCGA, Nature 2011)
# All complete tumors (316 samples)/1 Genes
# Gene set/ pathway is altered in 28 of queied samples
a = read.table('plot.txt',header = T,
sep = "\t",fill = T)
colnames(a) = c('id','stage','gene','mut','alteration')
dat=a
library(ggstatsplot)
ggbetweenstats(data=dat,x=stage,y=gene)
# change method
# compute the analysis of variance
res.aov <-aov(gene~stage,data=dat)
summary(res.aov)
TukeyHSD(res.aov)
rm(list=ls())
options(stringsAsFactors = F)
# bioconductor 的数据包
libarary(airway)
rm(list=ls())
options(stringsAsFactors = F)
# bioconductor 的数据包
library(airway)
install.packages("airway")
# https://bioconductor.org/packages/release/bioc/html/GEOquery.html
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("airway")
e
# bioconductor 的数据包
library(airway)
data(airway)
View(airway)
airway
exprSet= assay(airway)
View(exprSet)
View(airway)
colunames(exprSet)
colnames(exprSet)
# [1] "SRR1039508" "SRR1039509" "SRR1039512" "SRR1039513" "SRR1039516"
# [6] "SRR1039517" "SRR1039520" "SRR1039521"
group_list = colData(airway)[,3]
install.packages("edgeR")
BiocManager::install("edgeR")
group_list = colData(airway)[,3]
tmp = data.frame(g=gr)
tmp = data.frame(g=group_list)
View(tmp)
group_list = colData(airway)[,3]
tmp = data.frame(g=group_list)
rownames(tmp) = colnames(exprSet)
pheatmap::pheatmap(cor(exprSet))
pheatmap::pheatmap(cor(exprSet),annotation_col = tmp)
# 删除基因表达量合小于5
exprSet = exprSet[apply(exprSet,1,function(x) sum(x>1)>5),]
View(exprSet)
dim(exprSet)
exprSet = exprSet[names(sort(apply(exprSet,1,mad),decreasing = T)[1:50])]
rm(list=ls())
options(stringsAsFactors = F)
# bioconductor 的数据包
library(airway)
data(airway)
exprSet= assay(airway)
colnames(exprSet)
# [1] "SRR1039508" "SRR1039509" "SRR1039512" "SRR1039513" "SRR1039516"
# [6] "SRR1039517" "SRR1039520" "SRR1039521"
# 注释信息
group_list = colData(airway)[,3]
tmp = data.frame(g=group_list)
rownames(tmp) = colnames(exprSet)
pheatmap::pheatmap(cor(exprSet),annotation_col = tmp)
# 删除基因表达量合小于5
exprSet = exprSet[apply(exprSet,1,function(x) sum(x>1)>5),]
dim(exprSet) # 只剩两万个了
exprSet = log(edgeR::cpm(exprSet)+1)
exprSet = exprSet[names(sort(apply(exprSet,1,mad),decreasing = T)[1:50])]
M = cor(log2(exprSet+1))
rm(list=ls())
options(stringsAsFactors = F)
# bioconductor 的数据包
library(airway)
data(airway)
exprSet= assay(airway)
colnames(exprSet)
# [1] "SRR1039508" "SRR1039509" "SRR1039512" "SRR1039513" "SRR1039516"
# [6] "SRR1039517" "SRR1039520" "SRR1039521"
# 注释信息
group_list = colData(airway)[,3]
tmp = data.frame(g=group_list)
rownames(tmp) = colnames(exprSet)
pheatmap::pheatmap(cor(exprSet),annotation_col = tmp)
# 删除基因表达量合小于5
exprSet = exprSet[apply(exprSet,1,function(x) sum(x>1)>5),]
dim(exprSet) # 只剩两万个了
exprSet = log(edgeR::cpm(exprSet)+1)
exprSet = exprSet[names(sort(apply(exprSet,1,mad),decreasing = T)[1:50]),]
View(exprSet)
M = cor(log2(exprSet+1))
View(tmp)
M = cor(log2(exprSet+1))
tmp = data.frame(g=group_list)
rownames(tmp) = colnames(M)
pheatmap::pheatmap(M,annotation_col=tmp,filename = 'cor.png')
View(exprSet)
rm(list = ls())  ## 魔幻操作，一键清空~
options(stringsAsFactors = F)
# 注意查看下载文件的大小，检查数据
f='GSE42872_eSet.Rdata'
library(GEOquery)
BiocManager::install("GEOquery")
rm(list = ls())  ## 魔幻操作，一键清空~
options(stringsAsFactors = F)
# 注意查看下载文件的大小，检查数据
f='GSE42872_eSet.Rdata'
library(GEOquery)
# 这个包需要注意两个配置，一般来说自动化的配置是足够的。
#Setting options('download.file.method.GEOquery'='auto')
#Setting options('GEOquery.inmemory.gpl'=FALSE)
if(!file.exists(f)){
gset <- getGEO('GSE42872', destdir=".",
AnnotGPL = F,     ## 注释文件
getGPL = F)       ## 平台文件
save(gset,file=f)   ## 保存到本地
if(!file.exists(f)){
gset <- getGEO('GSE42872', destdir=".",
AnnotGPL = F,     ## 注释文件
getGPL = F)       ## 平台文件
save(gset,file=f)   ## 保存到本地
}
q()
q
rm(list = ls())  ## 魔幻操作，一键清空~
options(stringsAsFactors = F)
# 注意查看下载文件的大小，检查数据
f='GSE42872_eSet.Rdata'
library(GEOquery)
# 这个包需要注意两个配置，一般来说自动化的配置是足够的。
#Setting options('download.file.method.GEOquery'='auto')
#Setting options('GEOquery.inmemory.gpl'=FALSE)
if(!file.exists(f)){
gset <- getGEO('GSE42872', destdir=".",
AnnotGPL = F,     ## 注释文件
getGPL = F)       ## 平台文件
save(gset,file=f)   ## 保存到本地
}
load('GSE42872_eSet.Rdata')  ## 载入数据
View(gset)
class(gset)
length(gset)
# 因为这个GEO数据集只有一个GPL平台，所以下载到的是一个含有一个元素的list
a=gset[[1]]
View(a)
dat=exprs(a)
dim(dat)
pd=pData(a)
# (平均表达量/sd/mad/)最大的探针
boxplot(dat)
group_list=unlist(lapply(pd$title,function(x){
strsplit(x,' ')[[1]][4]
}))
exprSet=dat
exprSet=dat
exprSet[1:4,1:4]
boxplot(exprSet)
suppressMessages(library(limma))
design <- model.matrix(~0+factor(group_list))
table(group_list)
colnames(design)=levels(factor(group_list))
rownames(design)=colnames(exprSet)
design
contrast.matrix<-makeContrasts(paste0(unique(group_list),collapse = "-"),levels = design)
contrast.matrix<-makeContrasts("progres.-stable",levels = design)
contrast.matrix
##这个矩阵声明，我们要把progres.组跟stable进行差异分析比较
##step1
fit <- lmFit(exprSet,design)
##step2
fit2 <- contrasts.fit(fit, contrast.matrix) ##这一步很重要，大家可以自行看看效果
fit2 <- eBayes(fit2)  ## default no trend !!!
##eBayes() with trend=TRUE
##step3
tempOutput = topTable(fit2, coef=1, n=Inf)
nrDEG = na.omit(tempOutput)
#write.csv(nrDEG2,"limma_notrend.results.csv",quote = F)
head(nrDEG)
View(nrDEG)
t.test(exprSet[1,]~group_list)
exprSet[1,]
design
rm(list = ls())  ## 魔幻操作，一键清空~
options(stringsAsFactors = F)
library(airway)
data(airway)
exprSet = assay(airway)
colnames(exprSet)
rm(list = ls())  ## 魔幻操作，一键清空~
options(stringsAsFactors = F)
library(airway)
data(airway)
exprSet = assay(airway)
colnames(exprSet)
exprSet = exprSet[apply(exprSet,1,function(x) sum(x>1) > 5),]
table(group_list)
group_list = colData(airway)[,3]
table(group_list)
exprSet[1:4,1:4]
boxplot(exprSet)
boxplot(log(exprSet))
boxplot(log(exprSet+1))
rm(list = ls())
options(stringsAsFactors = F)
suppressPackageStartupMessages(library(CLL))
BiocManager::install("CLL")
gc()
.libPaths()
rm(list = ls())
options(stringsAsFactors = F)
a= read.table('all.id.txt',header = T)  #header
pwd
rm(list = ls())
options(stringsAsFactors = F)
a= read.table('./home/pigudogzyy100/project/airway/test/all.id.txt',header = T)  #header
a= read.table('./project/airway/test/all.id.txt',header = T)  #header
a= read.table('~/project/airway/test/all.id.txt',header = T)  #header
meta=a[,1:6]
exprSet=a[,7:ncol(a)]
a2=exprSet[,'SRR1039508.hisat.bam']  ##
library(pheatmap)
png('heatmap.png')
corrplot(cor(exprSet))
pheatmap(scale(cor(log2(exprSet+1))))
library(pheatmap)
png('heatmap.png')
corrplot(cor(exprSet))
library(corrplot)
png('heatmap.png')
corrplot(cor(exprSet))
pheatmap(scale(cor(log2(exprSet+1))))
dev.off()
##
library(airway)
data("airway")
exprSet=assay(airway)
a1=exprSet[,'SRR1039508']  ##
group_list=colData(airway)[,3]
##hclust, 层次聚类包
colnames(exprSet)=paste(group_list,1:ncol(exprSet),sep = '_')
##difine nodePar
nodePar=list(lab.cex=0.6, pch=c(NA, 19),cex=0.7,col='blue')
hc=hclust(dist(t(log2(exprSet+1))))
par(mar=c(5,5,5,10))  #par函数设置图形边距，mar参数设置边距
png('hclust.png',res = 120)
plot(as.dendrogram(hc),nodePar=nodePar,horiz=TRUE)
dev.off()
a2=data.frame(id=meta[,1],a2=a2)
a1=data.frame(id=names(a1),a1)
library(stringr)  #stringr包处理字符串
a2$id=str_split(a2$id,'\\.',simplify = T)[,1]
tmp=merge(a1,a2,by='id')
png('tmp.png')
plot(tmp[,c(2,4)])  #从图上看更直观
dev.off()
library(DESeq2)
install.packages("DESeq2")
